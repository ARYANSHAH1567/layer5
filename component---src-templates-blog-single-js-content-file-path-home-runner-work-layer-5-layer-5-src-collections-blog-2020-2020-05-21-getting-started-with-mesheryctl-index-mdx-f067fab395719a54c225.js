"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[85921],{17885:function(e,t,n){n.r(t),n.d(t,{Head:function(){return h},default:function(){return u}});var r=n(39626),l=n(67294);function a(e){var t=Object.assign({h3:"h3",p:"p",code:"code",pre:"pre",a:"a"},(0,r.ah)(),e.components),n=t.BlogWrapper,a=t.Link;return n||o("BlogWrapper",!0),a||o("Link",!0),l.createElement(n,null,l.createElement(t.h3,null,"Introduction to Meshery"),l.createElement(t.p,null,"For all those who are unaware of ",l.createElement("a",{href:"/meshery"},"Meshery"),", Meshery is a multi-service mesh management plane which provides users with service mesh operational best practices, lifecycle and configuration management, but also interoperates between various service meshes, while enabling you with the tools and knowledge to glean the most of out your service mesh performance, while keeping your overhead to a minimum."),l.createElement(t.p,null,"Meshery's vision is to make the operating of any service mesh layer of cloud infrastructure simplified, and to hasten the inevitable, eventual, ubiquituous adoption service meshes as a pervasively present layer of any the way that any modern workload is designed and deployed. Meshery is created by the ",l.createElement(a,{to:"/community"},"Layer5"),"."),l.createElement(t.p,null,"Layer5 is a community-first, service mesh company which has technology ",l.createElement(a,{to:"/partners"},"partnerships")," with various tech giants like Microsoft, HashiCorp, CNCF, RedHat and many more to enlist. The community consists of open source leaders like maintainers of trending open-source projects, Google SoCers, Docker Captains, service mesh maintainers, Cloud Native Ambassadors and many more (",l.createElement("a",{href:"http://slack.layer5.io"},"join in!"),")."),l.createElement(t.h3,null,"What is mesheryctl?"),l.createElement(t.p,null,"Meshery provides you with a clean, robust, streamlined command-line interface to manage and benchmark your service meshes, ",l.createElement(t.code,null,"mesheryctl"),". With ",l.createElement(t.code,null,"mesheryctl"),", not only you can manage your adapters & containers but you can also benchmark your mesh using the command line. ",l.createElement(t.code,null,"mesheryctl")," provides support to a number of platforms so that we never miss out users. ",l.createElement(t.code,null,"mesheryctl")," can be installed with a single bash command by simply executing:"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"$ curl -L https://meshery.io/install | PLATFORM=kubernetes bash -\n")),l.createElement(t.p,null,"in your terminal. You will see Meshery getting installed & fired up on port: 9081.\nYou will see the output as"),l.createElement(t.pre,null,l.createElement(t.code,null,"Extracting mesheryctl-v0.3.14...\nArchive:  /Users/user/meshery.zip\n  inflating: LICENSE\n  inflating: README.md\n  inflating: mesheryctl\n\nInstalling mesheryctl in /usr/local/bin.\nmesheryctl installed.\npermissions moved to user\nRemoving installation files and opening Meshery...Updating Meshery now...\nPulling meshery          ... download complete\nPulling meshery-istio    ... done\nPulling meshery-linkerd  ... done\nPulling meshery-consul   ... done\nPulling meshery-octarine ... done\nPulling meshery-nsm      ... done\nPulling meshery-cpx      ... done\nPulling watchtower       ... done\n")),l.createElement(t.p,null,"and you will be able to see the Meshery UI on ",l.createElement(t.code,null,"https://localhost:9081"),"."),l.createElement(t.p,null,"If you are wondering if bash is only way to get ",l.createElement(t.code,null,"mesheryctl"),", then here is the list of platforms which you can get `mesheryctl describing all the different ways to get it."),l.createElement("table",{className:"table-1",align:"center"},l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",{align:"left"},"Platform"),l.createElement("th",null,"Supported?"))),l.createElement("tbody",null,l.createElement("tr",null,l.createElement("td",null,l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/docker"},"Docker")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/docker"},"Docker - Docker App")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null,l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/kubernetes"},"Kubernetes")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/aks"},"Kubernetes - AKS")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/quick-start"},"Kubernetes - Docker Desktop")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/eks"},"Kubernetes - EKS")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/gke"},"Kubernetes - GKE")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/kubernetes#helm"},"Kubernetes - Helm")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/minikube"},"Kubernetes - Minikube")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - Kubernetes - OpenShift"),l.createElement("td",{className:"text-centre"},"In Progress")),l.createElement("tr",null,l.createElement("td",null,l.createElement("a",{href:"https://docs.meshery.io/installation/quick-start"},"Linux")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null,l.createElement("a",{href:"https://docs.meshery.io/installation/quick-start"},"Mac")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/mesheryctl#homebrew"},"Mac - Homebrew")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null,l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/windows"},"Windows")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/mesheryctl#scoop"},"Scoop")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null," - ",l.createElement("a",{href:"https://docs.meshery.io/installation/platforms/windows#wsl"},"WSL2")),l.createElement("td",{className:"text-centre"},"‚úîÔ∏è")),l.createElement("tr",null,l.createElement("td",null,"Raspberry Pi"),l.createElement("td",{className:"text-centre"},"In Progress")))),l.createElement("br"),l.createElement(t.p,null,"We believe we have not missed any of the popular platforms for what it‚Äôs worth, we will be rolling out support for RaspberryPi and OpenShift soon üéâüéâüéâ."),l.createElement(t.p,null,"If you are thinking about the requirements you would have to run ",l.createElement(t.code,null,"mesheryctl"),", so to your surprise, to successfully run ",l.createElement(t.code,null,"mesheryctl")," you will only need :"),l.createElement("table",{align:"center",className:"table-box"},l.createElement("tbody",null,l.createElement("tr",null,l.createElement("td",{className:"text-centre"},"a running Docker daemon")))),l.createElement(t.h3,null,"Into the MesheryCTL"),l.createElement(t.p,null,"Once you have successfully installed, you will be having the power of a new CLI Command MesheryCTL. As you type ",l.createElement(t.code,null,"mesheryctl")," into your terminal, you will be shown with the various sub-commands and flags ",l.createElement(t.code,null,"mesheryctl")," can support."),l.createElement(t.pre,null,l.createElement(t.code,null,'Meshery is the cloud native management plane, providing lifecycle, performance, and configuration management of service meshes and their workloads.\n\nUsage:\n  mesheryctl [command]\n\nAvailable Commands:\n  help        Help about any command\n  perf        Performance Management\n  system      Meshery Lifecyle Management\n  version     Print mesheryctl version\n\n\nFlags:\n      --config string    config file (default location is: $HOME/.meshery//meshery.yaml)\n  -h, --help            help for mesheryctl\n  -v, --version         Version of mesheryctl\n\nUse "mesheryctl [command] --help" for more information about a command.\n')),l.createElement(t.p,null,"Once you do ",l.createElement(t.code,null,"mesheryctl system start"),", Meshery will pull its adapters and latest docker images. Meshery will also detect your Kubernetes configuration and will let you know if Kubernetes is running. Meshery will run it‚Äôs web-based user interface on localhost port ",l.createElement(t.code,null,"9081")," and will let you select your choice of ",l.createElement("a",{href:"https://docs.meshery.io/extensibility#providers"},"Provider")," before you can start managing your service meshes with this powerful utility."),l.createElement("table",{align:"center",className:"table-box"},l.createElement("tbody",null,l.createElement("tr",null,l.createElement("td",{className:"text-centre"},"One of the most interesting sub-commands of ",l.createElement("code",null,"mesheryctl")," is ",l.createElement("strong",null,l.createElement("code",null,"perf")),".")))),l.createElement(t.p,null,"The ",l.createElement(t.code,null,"perf")," subcommand enables you to being managing the performance of your service mesh deployment and your workloads running atop of them. It lets you benchmark your service mesh without using the Meshery UI from the command line interface itself. Once you type ",l.createElement(t.code,null,"mesheryctl perf"),", it will present you with all the powerful flags you can control with CLI, including providing it with a ",l.createElement(t.code,null,"--file")," flag that points to any of a number of performance test profiles that you may have saved."),l.createElement(t.pre,null,l.createElement(t.code,null,'Performance Management and Benchmarking using Meshery CLI.\n\nUsage:\n  mesheryctl perf --[flags]\n\nAvailable Flags for Performance Command:\n  name[string]                  (optional) A short descriptor to serve as reference for this test. If not provided, a random name will be generate.\n  url[string]                   (required) URL endpoint to send requests.\n  duration[string]              (required) Length of time to perform test (e.g 30s, 15m, 1hr). See standard notation https://golang.org/pkg/time/#ParseDuration\n  load-generator[string]        (optional) Name of load generator to be used to perform test (default: "fortio")\n  mesh[string]                  (optional) Name of the service mesh to be tested (default: "None")\n  provider[string]              (required) Choice of Provider (default: "Meshery")\n  concurrent-requests[string]   (optional) Number of parallel requests to be sent (default: "1")\n  qps[string]                   (required) Queries per second (default: "0")\n  file[string]                  (optional) file containing SMPS-compatible test configuration. See https://github.com/layer5io/service-mesh-performance-specification\n  help                          Help for perf subcommand\n\nurl, duration, concurrent-requests, and qps can be considered optional flags if specified through an SMPS compatible yaml file using --file\n')),l.createElement(t.p,null,"An example usage of ",l.createElement(t.code,null,"mesheryctl perf --[flags]")," can be"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},' mesheryctl perf --name "a quick stress test" --url http://192.168.1.15/productpage --qps 300 --concurrent-requests 2 --duration 30s --token "provider=Meshery"\n')),l.createElement(t.p,null,"You can also provide a SMPS Configuration file with ",l.createElement(t.code,null,"perf")," subcommand, with this file provided you will not have to specify url, duration, concurrent-requests & qps. However, if specified the value provided through file will be over-rided by value through CLI. For more info about file configuration, see ",l.createElement(t.a,{href:"https://github.com/service-mesh-performance/service-mesh-performance/blob/master/docs/assets/spec/readme/service%20mesh%20performance%20specification%20result.yaml"},"here"),"."),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},' mesheryctl perf --name "a quick stress test" --file {path}/smps.yaml --token "provider=Meshery"\n')),l.createElement(t.h3,null,"What's next?"),l.createElement(t.p,null,"Meshery is an ever-growing community with attracting contributors from across the globe. We always have a role for everyone whether to be a code-writer, a community manager or a marketer. Layer5 community is always open to welcome you warmly."),l.createElement(t.p,null,"If this makes you excited, ",l.createElement(t.a,{href:"http://slack.layer5.io"},"join the Layer5 community")," with just a click & someone will be there to make sure you do not get missed."),l.createElement(t.p,null,"Stay meshy and happy meshing!"))}var s=function(e){void 0===e&&(e={});var t=Object.assign({},(0,r.ah)(),e.components).wrapper;return t?l.createElement(t,e,l.createElement(a,e)):a(e)};function o(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var c=n(17875),i=n(85235),m=function(e){var t=e.data,n=e.children;return l.createElement(l.Fragment,null,l.createElement(i.Z,{data:t},n))};function u(e){return l.createElement(m,e,l.createElement(s,e))}var h=function(e){var t=e.data;return l.createElement(c.Z,{title:t.mdx.frontmatter.title,image:t.mdx.frontmatter.thumbnail.publicURL})}}}]);