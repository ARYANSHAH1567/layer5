"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[14803],{5882:function(e,t,n){n.r(t),n.d(t,{Head:function(){return m},default:function(){return u}});var r=n(39626),l=n(67294);function a(e){var t=Object.assign({p:"p",code:"code",ol:"ol",li:"li",pre:"pre",a:"a"},(0,r.ah)(),e.components),n=t.ChapterStyle;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ChapterStyle",!0),l.createElement(n,null,l.createElement("h2",{className:"chapter-sub-heading"},"Ingressing and Egressing with Linkerd"),l.createElement(t.p,null,"Linkerd's control plane does not include ingress or egress gateways. Linkerd allows you choice of your preferred ingress (and egress) controller."),l.createElement("h2",{className:"chapter-sub-heading"},"How to use Ingress with Linkerd"),l.createElement(t.p,null,"In case you're anticipating infusing Linkerd into your ingress controller's pods there is some setup required. Linkerd discovers\nservices dependent on the ",l.createElement(t.code,null,":authority")," or ",l.createElement(t.code,null,"Host")," header. This permits Linkerd to comprehend what service a request is bound for without\nbeing subject to DNS or IPs."),l.createElement(t.p,null,"In this workshop, you will use the NGINX Ingress Controller with Linkerd."),l.createElement("h3",{className:"chapter-sub-heading"}," Installing NGINX Ingress Controller"),l.createElement(t.p,null,"Using Meshery, select the Linkerd from the Management menu, and:"),l.createElement(t.ol,null,"\n",l.createElement(t.li,null,"Enter ingress-nginx into the namespace field."),"\n",l.createElement(t.li,null,"Click the (+) icon on the Apply Service Mesh Configuration card and select NGINX Ingress Controller to install the latest version of KIC."),"\n"),l.createElement(t.p,null,l.createElement("h3",null,"Alternative: Manual installation"),"\nFollow this if the above steps did not work for you"),l.createElement("br"),l.createElement("br"),l.createElement("h4",{className:"chapter-alt-heading"}," Installing NGINX Ingress Controller"),l.createElement(t.p,null,"Install ingress controller using Docker Desktop"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-sh"},"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.40.2/deploy/static/provider/cloud/deploy.yaml\n")),l.createElement(t.p,null,"Install the ingress controller using Minikube"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-sh"},"minikube addons enable ingress\n")),l.createElement("h3",{className:"chapter-sub-heading"}," ",l.createElement(t.p,null,"Setting up Ingress controller with the sample application deployed")),l.createElement(t.p,null,"Using Meshery, click the ➡️ icon on the ",l.createElement(t.code,null,"Apply Custom Configuration")," card and apply the following manifest to your cluster:"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-sh"},'apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: web-ingress\n  namespace: emojivoto\n  annotations:\n    kubernetes.io/ingress.class: "nginx"\n    nginx.ingress.kubernetes.io/configuration-snippet: |\n      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;\n      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;\n\nspec:\n  rules:\n    - host: example.com\n      http:\n        paths:\n          - backend:\n              serviceName: web-svc\n              servicePort: 80\n')),l.createElement(t.p,null,"Nginx ingress will include the ",l.createElement(t.code,null,"l5d-dst-override")," header to tell Linkerd where to direct the request.\nYou'll need to include both the Kubernetes administration FQDN (web-svc.emojivoto.svc.cluster.local) and the destination servicePort."),l.createElement(t.p,null,"To test this, you need to get the external IP of your controller."),l.createElement("h4",{className:"chapter-sub-heading"}," Docker Desktop"),l.createElement(t.p,null,"You may use ",l.createElement(t.a,{href:"http://localhost"},"http://localhost")," or ",l.createElement("span",null,"http://"),"kubernetes.docker.internal or your host's IP address."),l.createElement("h4",{className:"chapter-sub-heading"}," Minikube"),l.createElement(t.p,null,"Expose your Kubernetes's cluster services to your localhost network:"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-sh"},"minikube tunnel\n")),l.createElement(t.p,null,"You may use ",l.createElement(t.a,{href:"http://localhost"},"http://localhost")," or You may use ",l.createElement(t.a,{href:"http://localhost"},"http://localhost"),": provided by the output of ",l.createElement(t.code,null,"minikube tunnel"),"."),l.createElement("h4",{className:"chapter-sub-heading"},"Hosted Kubernetes"),l.createElement(t.p,null,"Retrieve the external IP address by running:"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-sh"},"kubectl get svc --all-namespaces \\\n  -l app=nginx-ingress,component=controller \\\n  -o=custom-columns=EXTERNAL-IP:.status.loadBalancer.ingress[0].ip\n")),l.createElement(t.p,null,"You can now curl to your service without using port-forward, like this:"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-sh"},'curl -H "Host: example.com" http://{external-ip}\n')),l.createElement("br"))}var s=function(e){void 0===e&&(e={});var t=Object.assign({},(0,r.ah)(),e.components).wrapper;return t?l.createElement(t,e,l.createElement(a,e)):a(e)};var o=n(17875),c=n(5802),i=function(e){var t=e.data,n=e.location,r=t.TOC.nodes.sort((function(e,t){var n,r;return(null!==(n=e.frontmatter)&&void 0!==n&&n.order?e.frontmatter.order:100)-(null!==(r=t.frontmatter)&&void 0!==r&&r.order?t.frontmatter.order:100)}));return l.createElement(l.Fragment,null,l.createElement(c.Z,{chapterData:t.chapter,TOCData:r,courseData:t.course.nodes[0],location:n,serviceMeshesList:t.serviceMeshesList.nodes}))};function u(e){return l.createElement(i,e,l.createElement(s,e))}var m=function(e){var t=e.data;return l.createElement(o.Z,{title:t.chapter.frontmatter.chapterTitle,canonical:"https://layer5.io/learn/learning-paths"})}}}]);