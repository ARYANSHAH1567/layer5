"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[21358],{88892:function(e,t,n){n.r(t),n.d(t,{Head:function(){return u},default:function(){return d}});var a=n(39626),r=n(67294),o=n.p+"static/initial-design-0905be049e95a36032c899e9cb7e76fc.webp",l=n.p+"static/mesheryctl-docs-41d12c696f8911115f18426c4da44277.webp";function s(e){var t=Object.assign({p:"p",pre:"pre",code:"code"},(0,a.ah)(),e.components),n=t.BlogWrapper;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("BlogWrapper",!0),r.createElement(n,null,r.createElement("div",{className:"intro"},r.createElement("p",null,"Documentation plays a major role in any project. Even if the project is small or too big, the creator or the team behind the project needs to curate the documentation very well such that it'll be useful for new end users to refer and learn to use the project, troubleshoot the problems occurred and lot more. Thus, we, Layer5 have curated the documentation for Meshery to meet such purposes. Not to mention, ",r.createElement("code",null,"mesheryctl"),", the CLI client of Meshery needs a curated documentation as well. This blog describes about the evolution of ",r.createElement("code",null,"mesheryctl")," command reference page. ")),r.createElement("h3",null,"Initial Command Reference Design"),r.createElement("p",null,r.createElement(t.p,null,"The initial design of ",r.createElement("code",null,"mesheryctl")," command reference page is all made using pure markdown and the functionality is handled using Jekyll, the main framework used for Meshery Docs. This handled great at initial stage but had many limitations, such as:"),r.createElement("ul",null,r.createElement("li",null,"Updation of YAML for data is often required"),r.createElement("li",null,"Design was obselete at initial stage"),r.createElement("li",null,"No separate pages for each command and subcommand")),r.createElement(t.p,null,"Thus, the idea for redesigning the ",r.createElement("code",null,"mesheryctl")," reference page was desperately needed.")),r.createElement("p",null,r.createElement("a",{href:"https://docs.meshery.io",alt:"Meshery Documentation",target:"_parent"},r.createElement("img",{src:o,className:"image-center-shadow",alt:"Initial design of mesheryctl command reference"}))),r.createElement("h3",null,"Updated Command Reference Design"),r.createElement("p",null,"To tackle the shortcomings of the previous design, I was tasked to redesign the ",r.createElement("code",null,"mesheryctl")," command reference page entirely. This was a big task at first glance to me, as I was a new contributor back then. Eventually after manipulating the reference section with help of great folks, I was able to pull off the task and the design was updated. "),r.createElement("p",null,r.createElement("a",{href:"https://docs.meshery.io",alt:"Meshery Documentation"},r.createElement("img",{src:l,className:"image-center-shadow",alt:"Meshery CLI command reference"}))),r.createElement("p",null,"The redesign work was done with help of HTML in markdown and with optimization in YAML code. A sample is given below."),r.createElement(t.pre,null,r.createElement(t.code,null,'    \x3c!-- Copy this template to create individual doc pages for each mesheryctl commands --\x3e\n\n    \x3c!-- Name of the command --\x3e\n    # mesheryctl mesh\n\n    \x3c!-- Description of the command. Preferably a paragraph --\x3e\n    ## Description\n\n    {% assign name = site.data.mesheryctlcommands.cmds[page.command] %}\n    {{ name.description }}\n\n    \x3c!-- Basic usage of the command --\x3e\n    <pre className="codeblock-pre">\n    <div className="codeblock">\n    mesheryctl mesh [flags] \n    </div>\n    </pre>\n    ...........\n')),r.createElement("h3",null,"Adding auto generation feature in reference"),r.createElement("p",null,"As time passed, we realized that the command reference missed something for a while, though the design has been changed. Then, we thought the idea of automating the generation of docs such that developers don't need to change the code in docs section while working towards ",r.createElement("code",null,"mesheryctl"),". That's where we got to know that Cobra library (the library for CLI apps made using golang) has a feature to make doc pages automatically. So we decided to incorporate that feature into ",r.createElement("code",null,"mesheryctl")," docs page as well! After making several changes and a PR, I was finally able to introduce the feature in the docs site!"),r.createElement(t.pre,null,r.createElement(t.code,null,'var startCmd = &cobra.Command {\n\tUse:   "start",\n\tShort: "Start Meshery",\n\tLong:  `Start Meshery and each of its service mesh components.`,\n\tArgs:  cobra.NoArgs,\n\tExample: `\n// Start meshery\nmesheryctl system start\n// To create a new context for in-cluster Kubernetes deployments and set the new context as your current-context\nmesheryctl system context create k8s -p kubernetes -s\n// (optional) skip checking for new updates available in Meshery.\nmesheryctl system start --skip-update\n// Reset Meshery\'s configuration file to default settings.\nmesheryctl system start --reset\n// Silently create Meshery\'s configuration file with default settings\nmesheryctl system start --yes\n.....\n}\n\t`,\n')),r.createElement("p",null,"Using this information provided above in each golang file, the markdown page is generated using Cobra CLI library and thus reducing the workload on the developer by automating via ",r.createElement("a",{href:"https://github.com/meshery/meshery/blob/master/.github/workflows/mesheryctl-ci.yml#L73"},"GitHub Actions"),"."),r.createElement("br"),r.createElement("p",null,"This is so far on how the ",r.createElement("code",null,"mesheryctl")," command reference is evolved for now. And I hope that it'll continue to evolve in the field of documentation to serve the users to use Meshery in best way possible."))}var c=function(e){void 0===e&&(e={});var t=Object.assign({},(0,a.ah)(),e.components).wrapper;return t?r.createElement(t,e,r.createElement(s,e)):s(e)};var i=n(17875),m=n(85235),h=function(e){var t=e.data,n=e.children;return r.createElement(r.Fragment,null,r.createElement(m.Z,{data:t},n))};function d(e){return r.createElement(h,e,r.createElement(c,e))}var u=function(e){var t=e.data;return r.createElement(i.Z,{title:t.mdx.frontmatter.title,image:t.mdx.frontmatter.thumbnail.publicURL})}}}]);