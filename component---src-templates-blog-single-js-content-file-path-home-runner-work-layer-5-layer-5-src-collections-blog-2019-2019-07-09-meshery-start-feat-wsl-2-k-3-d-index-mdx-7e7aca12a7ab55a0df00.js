"use strict";(self.webpackChunkLayer5=self.webpackChunkLayer5||[]).push([[47700],{14756:function(e,t,n){n.r(t),n.d(t,{Head:function(){return b},default:function(){return y}});var a=n(39626),l=n(67294),r=n.p+"static/wsl-docker-start-0e03804a12337dfcfd781404a0e4f986.webp",s=n.p+"static/wsl-grafana-login-2afe004b2222af8de44638062f8e1801.webp",c=n.p+"static/wsl-grafana-login-success-edf1ca8e48c905ec5a6b9391a2edf831.webp",o=n.p+"static/wsl-grafana-start-160aff6f207edc14d9d9d60acb78d8da.webp",i=n.p+"static/wsl-k3d-start-b8962e7af86810ac09703171f92100bf.webp",m=n.p+"static/wsl-meshery-complete-61bcfec5af90792f821e7533504db6de.webp",h=n.p+"static/wsl-meshery-login-14a858cd81f905f4468e60527211381f.webp",u=n.p+"static/wsl-meshery-login-success-69ba1b78ae21f659862cd7b906de26a8.webp",d=n.p+"static/wsl-meshery-start-26d4260b8d29ac55a55b5455ba19b57c.webp";function f(e){var t=Object.assign({p:"p",ol:"ol",li:"li",a:"a",em:"em",ul:"ul",pre:"pre",code:"code",h4:"h4",h3:"h3"},(0,a.ah)(),e.components),n=t.BlogWrapper;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("BlogWrapper",!0),l.createElement(n,null,l.createElement(t.p,null,"During KubeCon EU 2019, I had the chance to discover two new softwares that simply amazed me:"),l.createElement(t.ol,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://layer5.io/cloud-native-management/meshery"},"Meshery"),", which is the multi-service mesh management plane."),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/rancher/k3d"},"k3d"),", which is used to create a dockerized ",l.createElement(t.a,{href:"https://k3s.io"},"k3s")," server."),"\n"),l.createElement(t.p,null,"And, what really appealed to me about both of them is that everything from the installation to the usage was just ",l.createElement(t.em,null,"simple!"),"\nAnd cream on the top, both softwares are used with or inside containers, making each ideal for a create/try/delete workflow."),l.createElement("h4",null,"Environment Setup"),l.createElement(t.p,null,"Before we start having ",l.createElement(t.em,null,"real")," fun with Meshery, I will quickly list the different components I used for this blog post and ensure I define what could be optional for your own setup:"),l.createElement(t.ol,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://layer5.io/cloud-native-management/meshery"},"Meshery")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://docs.docker.com/install/"},"Docker"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Docker is of course mandatory and as Meshery is based on a Compose file, which means that ",l.createElement(t.a,{href:"https://docs.docker.com/compose/install/"},"docker-compose")," is also mandatory."),"\n"),"\n"),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/rancher/k3d"},"k3d"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"k3d or any k3s/K8s cluster that you might have already configured."),"\n"),"\n"),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://devblogs.microsoft.com/commandline/wsl-2-is-now-available-in-windows-insiders/"},"WSL2"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,'For the (few) ones who know me, my "OS base" is WSL2, which means that without much/any change, it should run fine for any Linux/MacOS setup.'),"\n"),"\n"),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://grafana.com/"},"Grafana")," ",l.createElement(t.em,null,"(optional)"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Grafana is not mandatory however is strongly recommend. We will setup a dockerized instance, but feel free to plug Meshery with your existing instance."),"\n"),"\n"),"\n"),l.createElement("h4",null," Nothing is taken for granted "),l.createElement(t.p,null,"For the sake of making the blog post around Meshery, I won't explain how to install each component and will focus only on getting k3d and Meshery working."),l.createElement(t.p,null,'That said, I do not take anything for granted and as Scott Hanselman once taught me: there is no "just have to ..." or "by simply doing ...".'),l.createElement(t.p,null,"If you face any issue with your setup (hopefully WSL2), just let me know on ",l.createElement(t.a,{href:"https://twitter.com/nunixtech"},"Twitter")," or on the ",l.createElement(t.a,{href:"http://slack.layer5.io"},"Layer5 Slack channel"),"."),l.createElement("h4",null,"Meshery Installation"),l.createElement(t.p,null,"For the following steps, I will use the Ubuntu 18.04 WSL2 distro:"),l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Start docker and confirm it's running:"),"\n"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"sudo service docker start\ndocker version\n")),l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Using Docker, install Meshery on your local machine by running the following:"),"\n"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"curl -L https://meshery.io/install | PLATFORM=kubernetes bash -\n")),l.createElement("a",{href:r},l.createElement("img",{src:r,className:"thumbnail",alt:"wsl-docker-start"})),l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Create a new k3d cluster with the ",l.createElement("code",null," WSL2 IP ")),"\n"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"export mainIP=`hostname -I | awk '{ print $1 }'`\nk3d list\nk3d create --workers 3 --api-port ${mainIP}:6443\nexport KUBECONFIG=\"$(k3d get-kubeconfig --name='k3s-default')\"\nkubectl cluster-info\n")),l.createElement("a",{href:i},l.createElement("img",{src:i,className:"thumbnail",alt:"wslk3dstart"})),l.createElement("br"),l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Start Meshery on the newly created cluster"),"\n"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"mesheryctl system start\n")),l.createElement("a",{href:d},l.createElement("img",{src:d,className:"thumbnail",alt:"wslmesherystart"})),l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Once Meshery is fully started, login in your preferred browser using the ",l.createElement("code",null,"WSL2 IP")," instead of ",l.createElement("code",null,"localhost")),"\n"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"export BROWSER=/mnt/c/Firefox/firefox.exe\n$BROWSER $mainIP:9081 &\n")),l.createElement("a",{href:h},l.createElement("img",{src:h,alt:"wslmesherylogin"})),l.createElement("a",{href:u},l.createElement("img",{src:u,alt:"wslmesheryloginsuccess"})),l.createElement(t.h4,null,"[Optional] More analytics with Grafana"),l.createElement(t.p,null,"As stated above, Meshery can leverage the analytics provided by Grafana. For this blog post, as everything is built from scratch. Here is the setup for a new Grafana dockerized instance."),l.createElement(t.p,null,"Start a new Grafana on docker instance"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},'docker run \\\n-d \\\n-p 3000:3000 \\\n--name=grafana \\\n-e "GF_SERVER_ROOT_URL=http://$mainIP" \\\n-e "GF_SECURITY_ADMIN_PASSWORD=MesheryInstance" \\\ngrafana/grafana\n')),l.createElement("a",{href:o},l.createElement("img",{src:o,className:"thumbnail",alt:"wslgrafanastart"})),l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Access the new instance with the admin password that you set in the docker environment variable"),"\n"),l.createElement(t.pre,null,l.createElement(t.code,{className:"language-bash"},"$BROWSER $mainIP:3000 &\n")),l.createElement("a",{href:s},l.createElement("img",{src:s,className:"thumbnail",alt:"wslgrafanalogin"})),l.createElement("br"),l.createElement("a",{href:c},l.createElement("img",{src:c,className:"thumbnail",alt:"wslgrafanaloginsuccess"})),l.createElement(t.h3,null,"An inside look"),l.createElement(t.p,null,"While everything should run fine, it's always good to have a look at what has been deployed."),l.createElement(t.p,null,'In this case, we are almost exclusively working with Docker and the "inside look" should look something like this:'),l.createElement("a",{href:m},l.createElement("img",{src:m,className:"thumbnail",alt:"wslmesherycomplete"})),l.createElement(t.h4,null,"Conclusion"),l.createElement(t.p,null,"As ",l.createElement(t.a,{href:"https://twitter.com/lcalcote"},"Lee Calcote"),' put it, this is a lot of buzz words: Meshery > k3s (deployed via k3d) > Docker > WSL2 > Windows 10. And he\'s totally right, still the "beauty" here, is that it "simply works".'),l.createElement(t.p,null,"Since the begin of the Docker era, new tooling has appeard for simplifying complex workflows.\nEven Kubernetes (K8s) as a much lighter version with k3s by Rancher."),l.createElement(t.p,null,'And of course, Meshery which integrates and simplifies the installation and benchmarking of different service meshes. Hope you had fun assembling all these pieces and stay tunned for the "Bonuses", more fun to come!'),l.createElement("span",null," > > > ",l.createElement("i",null,"Nunix out")))}var p=function(e){void 0===e&&(e={});var t=Object.assign({},(0,a.ah)(),e.components).wrapper;return t?l.createElement(t,e,l.createElement(f,e)):f(e)};var E=n(17875),g=n(85235),w=function(e){var t=e.data,n=e.children;return l.createElement(l.Fragment,null,l.createElement(g.Z,{data:t},n))};function y(e){return l.createElement(w,e,l.createElement(p,e))}var b=function(e){var t=e.data;return l.createElement(E.Z,{title:t.mdx.frontmatter.title,image:t.mdx.frontmatter.thumbnail.publicURL})}}}]);