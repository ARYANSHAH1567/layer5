{"version":3,"file":"component---src-pages-blog-index-js-03dfa30c1190af5ef6ef.js","mappings":"0PACaA,EAAkBC,EAAAA,QAAAA,IAAAA,WAAH,0EAAGA,CAAH,wwB,uDC4F5B,EAhFiB,SAAC,GAMX,IALLC,EAKI,EALJA,WACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,KAEA,GAAsCC,EAAAA,EAAAA,UAAS,GAAxCC,EAAP,KAAoBC,EAApB,KACOC,GAAgBH,EAAAA,EAAAA,UAAS,IAAhC,GACMI,EAAkBH,EAAcE,EAChCE,EAAmBD,EAAkBD,EAC3C,GAAsCH,EAAAA,EAAAA,UAAS,IAAxCM,EAAP,KAAoBC,EAApB,KACA,GAAqCC,EAAAA,EAAAA,GACnCT,EAAKU,OAAOC,MACZH,EACAD,EACA,CAAC,cAAe,SAChB,MALMK,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAOhBC,EAAgBF,EAAaG,MAAMT,EAAkBD,GAK3D,OACE,gBAACX,EAAD,KACE,gBAACsB,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,OACLC,IAAKC,EAAAA,EACLC,SAAS,mBAEX,uBAAKC,UAAU,qBACb,gBAAC,KAAD,KACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,uBAAKF,UAAU,kBACb,gBAAC,IAAD,CACE1B,WAAYA,EACZC,YAAaA,EACbC,YAAaA,IAEf,gBAAC2B,EAAA,EAAD,CAAWlB,YAAaA,EAAaM,WAAYA,KAEnD,uBAAKS,UAAU,qBACb,gBAAC,KAAD,KACGV,EAAac,OAAS,GACrB,gBAAC,KAAD,CAAKH,GAAI,GAAII,GAAI,GAAjB,wCACwCpB,EADxC,YAKDO,EAAcY,OAAS,GAAKZ,EAAcc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,OAApB,OAC7C,gBAAC,KAAD,CAAKC,IAAKH,EAAIN,GAAI,GAAII,GAAI,GACxB,gBAACM,EAAA,EAAD,CAAMH,YAAaA,EAAaC,OAAQA,IAFG,IAK/C,gBAAC,KAAD,KACGjB,EAAcY,OAAS,GACtB,gBAAC,IAAD,CACEtB,aAAcA,EACd8B,WAAYtB,EAAac,OACzBS,SAzCL,SAACC,GAChBjC,EAAeiC,EAChB,EAwCqBlC,YAAaA,QAOzB,gBAAC,KAAD,CAAKqB,GAAI,GAAIC,GAAI,GACf,gBAAC,IAAD,CAASzB,YAAaA,QAOnC,E,4CCED,EA7Ca,SAACsC,GACZ,OAAoCpC,EAAAA,EAAAA,WAAS,GAAtCL,EAAP,KAAmB0C,EAAnB,KAEMzC,EAAc,WAClByC,GAAc,EACf,GAODC,EAAAA,EAAAA,YAAU,WACJF,EAAMG,SAASC,OACbJ,EAAMG,SAASC,MAAM7C,YAAYC,GAExC,GAAE,IAEH,IAAI6C,EAAW,SAACL,GACd,OAAIzC,EAAmB,gBAAC,IAAayC,GAC9B,gBAAC,EAAaA,EACtB,EAED,OACE,gBAAC,EAAAM,cAAD,CAAeC,MAAOA,EAAAA,GACpB,gBAAC,IAAD,KACE,gBAAC,IAAD,MACA,gBAAC,IAAD,CACE3B,MAAM,OACN4B,YAAY,kIAEd,gBAACC,EAAA,EAAD,MACA,gBAACJ,EAAD,CACE9C,WAAYA,EACZC,YAAaA,EACbC,YA7BY,WAClBwC,GAAc,EACf,EA4BOvC,YAAasC,EAAMtC,YACnBC,KAAMqC,EAAMrC,OAEd,gBAAC+C,EAAA,EAAD,OAIP,C","sources":["webpack://Layer5/./src/sections/Blog/Blog-grid/blogGrid.style.js","webpack://Layer5/./src/sections/Blog/Blog-grid/index.js","webpack://Layer5/./src/pages/blog/index.js"],"sourcesContent":["import styled from \"styled-components\";\nexport const BlogPageWrapper = styled.div`\n  .blog-grid-wrapper {\n    margin: 5rem auto;\n  }\n  .tooltip-search {\n    margin-bottom: 0.8rem;\n  }\n\n  @media only screen and (max-width: 575px) {\n    .blog-grid-wrapper {\n      margin: 0 auto 1rem;\n    }\n  }\n\n  @media only screen and (max-width: 992px) {\n    .blog-page-wrapper {\n      margin-bottom: 5rem;\n    }\n\n    .post-meta-block {\n      height: 3.5rem;\n    }\n  }\n\n  @media only screen and (min-width: 575px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 0;\n    }\n  }\n  /* @media only screen and (min-width: 990px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  } */\n`;\n","import React, {  useState } from \"react\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\nimport { BlogPageWrapper } from \"./blogGrid.style\";\nimport Card from \"../../../components/Card\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport SearchBox from \"../../../reusecore/Search\";\nimport Pagination from \"../../Resources/Resources-grid/paginate\";\nimport useDataList from \"../../../utils/usedataList\";\n\n\nconst BlogGrid = ({\n  isListView,\n  setListView,\n  setGridView,\n  pageContext,\n  data\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { queryResults, searchData } = useDataList(\n    data.allMdx.nodes,\n    setSearchQuery,\n    searchQuery,\n    [\"frontmatter\", \"title\"],\n    \"id\"\n  );\n  const searchedPosts = queryResults.slice(indexOfFirstPost, indexOfLastPost);\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title=\"Blog\"\n        path=\"Blog\"\n        img={RssFeedIcon}\n        feedlink=\"/blog/feed.xml\"\n      />\n      <div className=\"blog-page-wrapper\">\n        <Container>\n          <Row>\n            <Col xs={12} lg={8}>\n              <div className=\"tooltip-search\">\n                <BlogViewToolTip\n                  isListView={isListView}\n                  setListView={setListView}\n                  setGridView={setGridView}\n                />\n                <SearchBox searchQuery={searchQuery} searchData={searchData} />\n              </div>\n              <div className=\"blog-grid-wrapper\">\n                <Row>\n                  {queryResults.length < 1 && (\n                    <Col xs={12} sm={6}>\n                      No blog post that matches the title \"{searchQuery}\" found.\n                    </Col>\n                  )}\n\n                  {searchedPosts.length > 0 && searchedPosts.map(({ id, frontmatter, fields }) => (\n                    <Col key={id} xs={12} sm={6}>\n                      <Card frontmatter={frontmatter} fields={fields} />\n                    </Col>\n                  ))}\n                  <Col>\n                    {searchedPosts.length > 0 && (\n                      <Pagination\n                        postsPerPage={postsPerPage}\n                        totalPosts={queryResults.length}\n                        paginate={paginate}\n                        currentPage={currentPage}\n                      />\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n            <Col xs={12} lg={4}>\n              <Sidebar pageContext={pageContext} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogGrid;\n","import React, { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport Layout from \"../../components/layout\";\nimport SEO from \"../../components/seo\";\n\nimport Navigation from \"../../sections/General/Navigation\";\nimport BlogGrid from \"../../sections/Blog/Blog-grid\";\nimport Footer from \"../../sections/General/Footer\";\n\nimport { GlobalStyle } from \"../../sections/app.style\";\nimport theme from \"../../theme/app/themeStyles\";\n\nimport { graphql } from \"gatsby\";\nimport BlogList from \"../../sections/Blog/Blog-list\";\n\nexport const query = graphql`\n  query allBlogs {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: {\n        fields: { collection: { eq: \"blog\" } }\n        frontmatter: { published: { eq: true } }\n      }\n    ) {\n      nodes {\n        id\n        body\n        frontmatter {\n          title\n          date(formatString: \"MMM Do, YYYY\")\n          author\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n            extension\n            publicURL\n          }\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nconst Blog = (props) => {\n  const [isListView, setIsListView] = useState(false);\n\n  const setListView = () => {\n    setIsListView(true);\n  };\n  const setGridView = () => {\n    setIsListView(false);\n  };\n\n\n\n  useEffect(() => {\n    if (props.location.state) {\n      if (props.location.state.isListView) setListView();\n    }\n  }, []);\n\n  let BlogView = (props) => {\n    if (isListView) return <BlogList {...props} />;\n    return <BlogGrid {...props} />;\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO\n          title=\"Blog\"\n          description=\"The latest news and announcements about Layer5, our products, and our ecosystem, as well as voices from across our community.\"\n        />\n        <Navigation />\n        <BlogView\n          isListView={isListView}\n          setListView={setListView}\n          setGridView={setGridView}\n          pageContext={props.pageContext}\n          data={props.data}\n        />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default Blog;\n"],"names":["BlogPageWrapper","styled","isListView","setListView","setGridView","pageContext","data","useState","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","searchQuery","setSearchQuery","useDataList","allMdx","nodes","queryResults","searchData","searchedPosts","slice","PageHeader","title","path","img","RssFeedIcon","feedlink","className","xs","lg","Search","length","sm","map","id","frontmatter","fields","key","Card","totalPosts","paginate","pageNumber","props","setIsListView","useEffect","location","state","BlogView","ThemeProvider","theme","description","Navigation","Footer"],"sourceRoot":""}